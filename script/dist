#!/usr/bin/env ruby
# frozen_string_literal: true
require "bundler/setup"
require "erb"
require "i18n-js"

def update_version(path)
  package = JSON.load(File.read(path))
  package["version"] = I18n::JS::VERSION

  File.open(path, "w") do |file|
    file << JSON.pretty_generate(Hash[package.sort])
  end
end

def render_file(file_path)
  ERB
    .new(File.read(file_path), nil, "-")
    .result
    .lines
    .reject {|line| line.start_with?("//=") }
    .join("")
end

def write_to_file(path, contents)
  FileUtils.mkdir_p(File.dirname(path))
  File.open(path, "w") {|file| file << contents }
end

def compress_file(file)
  min_path = file.gsub(/\.js$/, ".min.js")
  gz_path = file.gsub(/\.js$/, ".js.gz")
  system "./node_modules/.bin/uglifyjs '#{file}' --compress --mangle --output '#{min_path}'"
  system "cat '#{min_path}' | gzip -9 --stdout > '#{gz_path}'"
end

# Set some configuration
I18n::JS.include_shims = false
output_dir = ENV.fetch("OUTPUT_DIR", "./dist")

# Clean up dist directory
FileUtils.rm_rf(output_dir)

# Export i18n.js
write_to_file("#{output_dir}/i18n.js", render_file("app/assets/javascripts/i18n.js.erb"))

# Export pluralization rules
write_to_file("#{output_dir}/pluralization/ru.js", render_file("app/assets/javascripts/i18n/pluralization/ru.js.erb"))

# Then regenerate the NPM/Bower JSON file.
update_version("./package.json")
update_version("./bower.json")

# Export minified version.
Dir["#{output_dir}/**/*.js"].each do |file|
  compress_file(file)
end
